# -*- coding: utf-8 -*-
"""binarization.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1PUln8ad993oXxSYiIo8o0ISVIYVgO2y-
"""

def methods_show(image_t):
    image = image_t[0]
    print(image.shape)
    binary_otsu    = image > skf.threshold_otsu(image)
    binary_niblack = image > skf.threshold_niblack(image, window_size=window_size, k=0.8)
    binary_sauvola = image > skf.threshold_sauvola(image, window_size=window_size)
    binary_isodata = image > skf.threshold_isodata(image)
    binary_tri     = image > skf.threshold_triangle(image)

    bins = [image, binary_otsu, binary_niblack,
          binary_tri, binary_isodata, binary_sauvola]

    names = ['Original', 'Otsu', 'Niblack',
           'Triangle', 'Ridler-Calvard (isodata)', 'Sauvola']


    plt.figure(figsize=(25, 10))

    for i in range(len(bins)):
        plt.subplot(2, 3, i+1)
        plt.imshow(bins[i], cmap=plt.cm.gray)
        plt.title(names[i])
        plt.axis('off')
    plt.suptitle(image_t[1],
                y = 1,
                fontsize = 30)
    plt.show()

import matplotlib.pyplot as plt
import matplotlib
import skimage.filters as skf
import numpy as np

from skimage import data
from skimage import io
from skimage.color import rgb2gray


scan_good = io.imread("scan_good.jpg")
scan_bad = io.imread("scan_bad.jpg")
hromo = rgb2gray(io.imread("hromo.png")) 
D_16_3 = rgb2gray(io.imread("DIBCO_2016.bmp"))

images = [(scan_good, "Скан текста"),
          (scan_bad, "Скан текста с дефектами"),
          (D_16_3, "DIBCO 2016"),
          (data.page(), "Текст с неоднородной яркостью фона"),
          (data.cell(), "Клетка человека"),
          (hromo, "Хромосомы делятся митозом")]


matplotlib.rcParams['font.size'] = 11
window_size = 45

#methods_show( data.text())
for image in images: 
    methods_show(image)
    print("\n"*10)